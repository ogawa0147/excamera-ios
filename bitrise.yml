---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
workflows:
  _run_setup:
    steps:
    - script:
        title: Bootstrap add env rbenv ruby version
        inputs:
        - content: |-
            #!/usr/bin/env bash

            envman add --key RBENV_RUBY_VERSION_HOME --value "$(rbenv root)""/versions/""$(< .ruby-version)"
    - cache-pull: {}
    - script:
        title: Bootstrap rbenv
        inputs:
        - content: |-
            #!/usr/bin/env bash

            rubyVersionBinaryPath="$(rbenv root)""/versions/""$(< .ruby-version)""/bin/ruby"

            if [ -e "$rubyVersionBinaryPath" ]; then
              :
            else
              brew update && brew upgrade ruby-build || true
              rbenv install "$(< .ruby-version)"
            fi
    - script:
        title: Bootstrap bundle
        inputs:
        - content: |-
            #!/usr/bin/env bash

            bundle install --path .bundle
            brew bundle
    - fastlane:
        title: Bootstrap Project
        inputs:
        - lane: ios bootstrap
    - cache-push:
        run_if: ".IsCI"
        inputs:
        - cache_paths: |-
            ./Cartfile.resolved
            ./Carthage -> ./Cartfile.resolved
            ./Pods -> ./Podfile.lock
            .bundle -> ./Gemfile.lock
            $RBENV_RUBY_VERSION_HOME
  _run_cache:
    steps:
    - script:
        title: Bootstrap add env rbenv ruby version
        inputs:
        - content: |-
            #!/usr/bin/env bash

            envman add --key RBENV_RUBY_VERSION_HOME --value "$(rbenv root)""/versions/""$(< .ruby-version)"
    - cache-pull: {}
    - script:
        title: Bootstrap rbenv
        inputs:
        - content: |-
            #!/usr/bin/env bash

            rubyVersionBinaryPath="$(rbenv root)""/versions/""$(< .ruby-version)""/bin/ruby"

            if [ -e "$rubyVersionBinaryPath" ]; then
              :
            else
              brew update && brew upgrade ruby-build || true
              rbenv install "$(< .ruby-version)"
            fi
    - script:
        title: Bootstrap bundle
        inputs:
        - content: |-
            #!/usr/bin/env bash

            bundle install --path .bundle
            brew bundle
    - carthage:
        title: Run Scheduled Cache carthage
        inputs:
        - carthage_command: bootstrap
        - carthage_options: "--platform iOS --cache-builds"
    - cache-push:
        inputs:
        - cache_paths: |-
            ./Cartfile.resolved
            ./Carthage -> ./Cartfile.resolved
            .bundle -> ./Gemfile.lock
            $RBENV_RUBY_VERSION_HOME
  _run_versions:
    steps:
    - script:
        title: Bootstrap add env rbenv ruby version
        inputs:
        - content: |-
            #!/usr/bin/env bash

            envman add --key RBENV_RUBY_VERSION_HOME --value "$(rbenv root)""/versions/""$(< .ruby-version)"
    - cache-pull: {}
    - script:
        title: Bootstrap rbenv
        inputs:
        - content: |-
            #!/usr/bin/env bash

            rubyVersionBinaryPath="$(rbenv root)""/versions/""$(< .ruby-version)""/bin/ruby"

            if [ -e "$rubyVersionBinaryPath" ]; then
              :
            else
              brew update && brew upgrade ruby-build || true
              rbenv install "$(< .ruby-version)"
            fi
    - script:
        title: Bootstrap bundle
        inputs:
        - content: |-
            #!/usr/bin/env bash

            bundle install --path .bundle
            brew bundle
    - fastlane:
        title: Show Versions
        inputs:
        - lane: ios versions
  ci:
    after_run:
    - _run_setup
  check_run:
    after_run:
    - _run_setup
  cache_run:
    after_run:
    - _run_cache
  versions_run:
    after_run:
    - _run_versions
